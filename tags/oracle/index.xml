<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle on Rehoni | 罗皓</title>
    <link>/tags/oracle/</link>
    <description>Recent content in Oracle on Rehoni | 罗皓</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Jul 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/oracle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oracle——自动按月分区</title>
      <link>/cn/2021/%E6%8C%89%E6%9C%88%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/cn/2021/%E6%8C%89%E6%9C%88%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA/</guid>
      <description>Oracle建分区表自动按月分区 -- 自动按月分区 create table EMS_RATIO ( FUNCTION_ID VARCHAR2(64), FUNCTION_NAME VARCHAR2(256), FUNCTION_TYPE NUMBER(4), RESOLVE_TIME TIMESTAMP(0), MEASURE_TIME TIMESTAMP(0) not null, VOLTAGE VARCHAR2(32), START_STATION VARCHAR2(64), END_STATION VARCHAR2(64), RATED_CAPACITY FLOAT(24), LIMIT_I FLOAT(24), I FLOAT(24), P FLOAT(24), Q FLOAT(24), LOAD FLOAT(24), LOAD_TYPE NUMBER(4), ID VARCHAR2(32) not null, NAME VARCHAR2(64), constraint EMS_RATIO_PK primary key (ID, MEASURE_TIME) ) tablespace EMS_RATIO_TB partition by RANGE (MEASURE_TIME) interval (numtoyminterval(1,&amp;#39;month&amp;#39;)) store in (EMS_RATIO_TB)( partition ems_ratio_partition values less than (to_date(&amp;#39;2020-06-01&amp;#39;,&amp;#39;yyyy-MM-dd&amp;#39;)) ) </description>
    </item>
    <item>
      <title>Oracle——问题小书</title>
      <link>/cn/2021/oracle%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/cn/2021/oracle%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>问题1、日期格式重复 ORA-01810 format code appears twice&#xA;报次错误的原因很简单，原因是重复了&#xA;比如：日期格式：&#xA;正确：TO_DATE(&amp;lsquo;2012-07-03 13:04:58&amp;rsquo;, &amp;lsquo;yyyy-MM-dd hh24:mi:ss&amp;rsquo;)&#xA;错误：TO_DATE(&amp;lsquo;2012-07-03 13:04:58&amp;rsquo;, &amp;lsquo;yyyy-MM-dd hh24:mi:dd&amp;rsquo;) dd是重复的&#xA;错误：TO_DATE(&amp;lsquo;2012-07-03 13:04:58&amp;rsquo;, &amp;lsquo;yyyy-MM-dd hh24:mm:ss&amp;rsquo;) mm是重复的&#xA;错误：TO_DATE(&amp;lsquo;2012-07-03 13:04:58&amp;rsquo;, &amp;lsquo;yyyy-MM-dd hh24:mm:dd&amp;rsquo;) dd，mm是重复的&#xA;问题2、ORA-01000: 超出打开游标的最大数 一般是Java代码在执行conn.createStatement()和 conn.prepareStatement()的时候，实际上都是相当与在数据库中打开了一个cursor。尤其是，如果你的 createStatement和prepareStatement是在一个循环里面的话，就会非常容易出现这个问题。因为游标一直在不停的打开，而且没有关闭。&#xA;问题3、Oracle取两列中值最大和最小的列 Greatest和least两个函数；或者用case when&#xA;-- a，b，c为table中的三列 select (case when a&amp;gt;b then a else b end),(case when b&amp;gt;c then b else c end) from table; 问题4、Oracle的update set必须是子查询 ORA-01767: UPDATE ...SET 表达式必须是子查询 问题5、Oracle查找和删除约束 select * from user_constraints; -- 在sys账户下查找 alter table standard.</description>
    </item>
    <item>
      <title>Oracle——连接远程数据库</title>
      <link>/cn/2021/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8Adblink/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/cn/2021/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8Adblink/</guid>
      <description>sqlplus swgk/Nr_9000@10.151.51.251:1522/zhsjhl 在tnsnames.ora文件中添加tns监听&#xA;ORA-12504：TNS：监听程序在CONNECT_DATA中未获得SERVICE_NAME zhsjhl = (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 10.151.51.251)(PORT = 1522)) ) (CONNECT_DATA = (SERVICE_NAME = zhsjhl) ) ) 创建库之间的链接 grant create public database link,create database link to huilk; create database link link1 connect to swgk identified by Nr_9000; create database link link2 connect to swgk identified by Nr_9000 using &amp;#39; (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 10.</description>
    </item>
    <item>
      <title>Oracle——索引操作</title>
      <link>/cn/2020/%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95/</guid>
      <description>查找索引&#xA;-- 查看某个表的索引 SELECT * from all_indexes WHERE table_name=upper(&amp;#39;table_name&amp;#39;); -- 查看索引在哪个字段 select * from user_ind_columns where table_name=upper(&amp;#39;table_name&amp;#39;); -- 查看某个用户下面所有的索引 SELECT * from all_indexes WHERE owner=&amp;#39;SR&amp;#39;; 创建和删除索引&#xA;-- 删除普通索引 drop index 索引名字 --创建普通索引 create index 索引名 on 表名(索引对应的列名); -- 创建组合索引 create index index_name on table_name(column_name_1,column_name_2); --删除主键索引 alter table 表名 drop constraint 索引名 --创建主键索引 alter table 表名 add constraint 表名 add constraint 索引名 primary key (主键); </description>
    </item>
    <item>
      <title>Oracle——获取每个分组中日期最大的一条</title>
      <link>/cn/2020/%E8%8E%B7%E5%8F%96%E6%AF%8F%E4%B8%AA%E5%88%86%E7%BB%84%E4%B8%AD%E6%97%A5%E6%9C%9F%E6%9C%80%E5%A4%A7%E7%9A%84%E4%B8%80%E6%9D%A1/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E8%8E%B7%E5%8F%96%E6%AF%8F%E4%B8%AA%E5%88%86%E7%BB%84%E4%B8%AD%E6%97%A5%E6%9C%9F%E6%9C%80%E5%A4%A7%E7%9A%84%E4%B8%80%E6%9D%A1/</guid>
      <description>在报表开发中，经常遇到这样的问题：分组后，只需要每个分组最新的一条数据，其他的就不要了&#xA;此时的思路应该是：对分组进行排序，并编号，然后select编号为1的记录即可。&#xA;select rn,a,b,c from (select ROW_NUMBER() OVER(PARTITION BY a ORDER BY b DESC) rn,a,b,c from table) where rn = 1 </description>
    </item>
    <item>
      <title>Oracle——存储过程及函数写法</title>
      <link>/cn/2020/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%8F%8A%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%8F%8A%E5%87%BD%E6%95%B0/</guid>
      <description>Oracle的插入存储过程实现 create or replace procedure insert_by_tablename(tableName in varchar2,&#xD;sortId in number,&#xD;flId in varchar2,&#xD;flName in varchar2,&#xD;flCode in varchar2,&#xD;vindicateOid in varchar2,&#xD;baseVoltageId in varchar2,&#xD;flLongitude in number,&#xD;flLatitude in number,&#xD;fullPath in varchar2,&#xD;runManageOid in varchar2)&#xD;as&#xD;dynamic_insert_sql varchar2(1000);&#xD;begin&#xD;dynamic_insert_sql := &amp;#39;insert into &amp;#39; || tableName ||&#xD;&amp;#39;(ID,FL_NAME,FL_CODE,VINDICATE_OID,SORT_ID,BASE_VOLTAGE_ID,LONGITUDE,LATITUDE,FULL_PATH,RUNMANAG_OID)&amp;#39; ||&#xD;&amp;#39; values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10)&amp;#39;;&#xD;execute immediate dynamic_insert_sql using flId,flName,flCode,vindicateOid,sortId,baseVoltageId,flLongitude,flLatitude,fullPath,runManageOid;&#xD;commit;&#xD;end insert_by_tablename; </description>
    </item>
    <item>
      <title>Oracle——纵表转横表</title>
      <link>/cn/2020/%E7%BA%B5%E8%A1%A8%E8%BD%AC%E6%A8%AA%E6%A0%87%E5%8F%8Acasewhen/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E7%BA%B5%E8%A1%A8%E8%BD%AC%E6%A8%AA%E6%A0%87%E5%8F%8Acasewhen/</guid>
      <description>使用decode实现 select MONITORINGPOINT,&#xD;ACQTM,&#xD;max(coalesce(DECODE(NAME, &amp;#39;EquCa&amp;#39;, MONITORVALUE, null), 0)) as EQUCA,&#xD;max(coalesce(DECODE(NAME, &amp;#39;LosFact&amp;#39;, MONITORVALUE, null), 0)) as LOSFACT,&#xD;max(coalesce(DECODE(NAME, &amp;#39;RisAmp&amp;#39;, MONITORVALUE, null), 0)) as RISAMP,&#xD;max(coalesce(DECODE(NAME, &amp;#39;TotAmp&amp;#39;, MONITORVALUE, null), 0)) as TOTAMP,&#xD;max(coalesce(DECODE(NAME, &amp;#39;CalAmp&amp;#39;, MONITORVALUE, null), 0)) as CALAMP&#xD;from IMP_TELEMETERING&#xD;where MONITORINGTYPEID = &amp;#39;A386&amp;#39; --and MONITORINGPOINT = &amp;#39;0304B13009999A386109001&amp;#39;&#xD;group by MONITORINGPOINT, ACQTM; 使用case when实现 SELECT&#xD;E_CODE,&#xD;E_TIME,&#xD;SUM( CASE E_TYPE WHEN 0 THEN E_VALUE ELSE 0 END ) AS WATER_ENERGY,--水耗&#xD;SUM( CASE E_TYPE WHEN 1 THEN E_VALUE ELSE 0 END ) AS ELE_ENERGY,--电耗&#xD;SUM( CASE E_TYPE WHEN 2 THEN E_VALUE ELSE 0 END ) AS HEAT_ENERGGY--热耗&#xD;FROM&#xD;THTF_ENERGY_TEST&#xD;GROUP BY E_CODE,E_TIME 嵌套case when 注意嵌套case when的时候似乎只能使用一个then，然后就要接else了。</description>
    </item>
    <item>
      <title>Oracle——触发器写法</title>
      <link>/cn/2020/%E8%A7%A6%E5%8F%91%E5%99%A8/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E8%A7%A6%E5%8F%91%E5%99%A8/</guid>
      <description>Oracle触发器 create or replace trigger update_insert_trigger&#xD;after insert or update&#xD;on GEA_DM_FUNCTION_LOCATION&#xD;for each row&#xD;begin&#xD;if inserting then&#xD;if :NEW.RUNNING_STATE&amp;lt;&amp;gt;&amp;#39;1&amp;#39; then&#xD;DBMS_OUTPUT.PUT_LINE(&amp;#39;是运行态=1,记录已经成功插入gea，执行插入clean&amp;#39;);&#xD;insert into ELECTRANS.CLEAND_EMS_DEVICE(CLEAND_EMS_DEVICE.ID,&#xD;CLEAND_EMS_DEVICE.FL_NAME,&#xD;CLEAND_EMS_DEVICE.FL_CODE,&#xD;CLEAND_EMS_DEVICE.VINDICATE_OID,&#xD;SORT_ID,&#xD;CLEAND_EMS_DEVICE.BASE_VOLTAGE_ID,&#xD;CLEAND_EMS_DEVICE.LONGITUDE,&#xD;CLEAND_EMS_DEVICE.LATITUDE,&#xD;CLEAND_EMS_DEVICE.FULL_PATH,&#xD;RUNMANAG_OID)&#xD;values (:NEW.CLASSIFY_ID,&#xD;:NEW.FL_NAME,&#xD;:NEW.FL_CODE,&#xD;:NEW.VINDICATE_OID,&#xD;:NEW.CLASSIFY_ID,&#xD;:NEW.BASE_VOLTAGE_ID,&#xD;:NEW.LONGITUDE,&#xD;:NEW.LATITUDE,&#xD;:NEW.FULL_PATH,&#xD;:NEW.RUNMANAGE_OID);&#xD;else&#xD;DBMS_OUTPUT.PUT_LINE(:NEW.RUNNING_CODE);&#xD;DBMS_OUTPUT.PUT_LINE(&amp;#39;不是运行态！=1,记录已经成功插入gea，不执行插入clean&amp;#39;);&#xD;end if;&#xD;elsif updating then&#xD;if :NEW.RUNNING_STATE = 1 then&#xD;DBMS_OUTPUT.PUT_LINE(&amp;#39;是运行态=1,记录已经成功插入gea，执行插入clean&amp;#39;);&#xD;update ELECTRANS.CLEAND_EMS_DEVICE&#xD;set CLEAND_EMS_DEVICE.FL_NAME = :NEW.FL_NAME,&#xD;CLEAND_EMS_DEVICE.FL_CODE = :NEW.FL_CODE,&#xD;CLEAND_EMS_DEVICE.VINDICATE_OID = :NEW.</description>
    </item>
    <item>
      <title>Oracle——递归查询写法</title>
      <link>/cn/2020/%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2/</guid>
      <description>Oracle递归查询 select * from&#xD;(select t.EMPLOYEE_ID,&#xD;EMPLOYEE_NAME,&#xD;a.ORG_ID,&#xD;b.ORG_NAME,&#xD;t.SHORT_SPELL,&#xD;t.FULL_SPELL,JOBSTATUS,EMPLOYEE_STATUS,NATIONALITY,SEX,EDUCATION,MOBILE_PHONE,FIX_PHONE,EMAIL,t.UPDATE_TIME,&#xD;row_number() over (partition by EMPLOYEE_NAME order by t.UPDATE_TIME) rn&#xD;from SJHL_ZH.NZWOT_TOP_EMPLOYEE t&#xD;left join NZWOT_TOP_USER a on a.EMPLOYEE_ID = t.EMPLOYEE_ID&#xD;inner join (select org_id, org_name, parent_org_id, org_type, name_full_path, update_time from sjhl_zh.nzwot_top_organization&#xD;where state = 1 and regexp_like(name_full_path, &amp;#39;(变电管理所|输电管理所|试验研究所)&amp;#39;)&#xD;start with parent_org_id = ( select org_id from sjhl_zh.nzwot_top_organization&#xD;where name_full_path = &amp;#39;中国南方电网有限责任公司/广东电网有限责任公司/珠海供电局&amp;#39; and state = 1 and org_level = 3 ) connect by prior org_id = parent_org_id&#xD;union&#xD;select org_id, org_name, null, org_type, name_full_path, update_time from sjhl_zh.</description>
    </item>
    <item>
      <title>Oracle——查找和去除重复数据</title>
      <link>/cn/2020/2020-06-29-oracle-removerepeatdata/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-29-oracle-removerepeatdata/</guid>
      <description>查找重复（根据字段） 查询两个字段是否是一对一的关系：count_a != count_b时，不是一对一&#xA;select count(distinct a) count_a,count(distinct b) count_b from table t; 假设count_a&amp;gt;count_b，那么查询重复的a的记录：&#xA;select a,count(a) count_a from table t group by t.a having count(a)&amp;gt;1; 那么查询对应的表的记录为：&#xA;select * from table where a in ( select a,count(a) count_a from table t group by t.a having count(a)&amp;gt;1); 去除重复 全表重复 create table maindevicetemp as ( select distinct * from ELECTRANS.GEA_DM_RP_MAIN_DEVICE ); truncate table ELECTRANS.GEA_DM_RP_MAIN_DEVICE; insert into ELECTRANS.GEA_DM_RP_MAIN_DEVICE select * from maindevicetemp; drop table maindevicetemp; 部分重复 直接删除查出来的代码，1.</description>
    </item>
    <item>
      <title>Oracle——数据库备份和恢复</title>
      <link>/cn/2020/2020-06-22-oracle-expimp/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-22-oracle-expimp/</guid>
      <description>两种导出程序的比较和区别 exp、imp是客户段工具程序， expdp和impdp是服务端的工具程序。 exp和imp效率比较低；expdp和impdp效率高。 expdp、impdp数据泵功能强大并行、过滤、转换、压缩、加密、交互等等; 数据泵不支持9i以前版本， EXP/IMP短期内还是比较适用; EXP-0006:出现内部不一致的错误解决办法&#xA;出现此问题的原因是：在超过9i的Oracle版本进行exp操作，并且导出的表有进行表分区，就会出现导出中断并且报错。&#xA;因此新版本Oracle数据库以数据泵进行备份恢复为主。&#xA;在expdp、impdp命令使用时，不要习惯性的在命令末尾加上分号“;”，会导致不经意间出现错误。&#xA;1. expdp导出 在sqlplus下创建目录directory，创建逻辑目录，该命令不会在操作系统创建真正的目录，最好以system等管理员创建。&#xA;-- 需要在系统中创建真正的目录 create or replace directory DMP as &amp;#39;/users/oracle/dmp&amp;#39;; -- 可以查看已创建的逻辑目录 select * from dba_directories; 把读写权限授予特定用户&#xA;grant read,write on directory dir_dp to scott; 导出数据库&#xA;# 导出整个数据库 expdp user/psw DIRECTORY=DMP DUMPFILE=expstd.dmp FULL=y; # 按用户（执行时选择按用户进行比较合适） expdp scott/tiger@orcl schemas=scott dumpfile=expdp.dmp DIRECTORY=dpdata1; # 并行进程 expdp scott/tiger@orcl directory=dpdata1 dumpfile=scott3.dmp parallel=40 job_name=scott3 # 按表名 expdp scott/tiger@orcl TABLES=emp,dept dumpfile=expdp.dmp DIRECTORY=dpdata1; # 按查询条件导 expdp scott/tiger@orcl directory=dpdata1 dumpfile=expdp.</description>
    </item>
    <item>
      <title>Oracle排查账户锁定</title>
      <link>/cn/2020/2020-06-22-oracle-userlock/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-22-oracle-userlock/</guid>
      <description>设置时间格式 遇到登录报用户被锁时，先不要着急解锁，先使用dba角色的用户登录，设置具体时间格式，以便我们查询具体的被锁时间：&#xA;alter session set nls_date_format=&amp;#39;yyyy-mm-dd hh24:mi:ss&amp;#39;; 查看具体被锁时间： select username,lock_date from dba_users where username=&amp;#39;username&amp;#39;; 或者&#xA;select username,lock_date from dba_users where username=&amp;#39;xxx&amp;#39;; 如果发现被锁用户的时间信息已经不存在，原因是用户已经被客户解锁，所以视图dba_users中已经看不到用户被锁时间的信息。&#xA;这个时候通过查看表user$来解决这个问题：&#xA;select name,ltime from user$ where name =&amp;#39;XXXX&amp;#39;; 查看造成用户被锁的ip 主要监听日志，一般路径为：$ORACLE_HOME/network/admin/log/listener.log日志&#xA;查看监听日志：可以看出IP、登录用户Res0l、端口2067、登陆程序Datagrip等内容。&#xA;22-6月 -2020 15:31:20 * (CONNECT_DATA=(SID=ora12a)(CID=(PROGRAM=DataGrip)(HOST=__jdbc__)(USER=Res0l))) * (ADDRESS=(PROTOCOL=t cp)(HOST=198.120.100.198)(PORT=2067)) * establish * ora12a * 0 2020-06-22T15:31:23.829623+08:00 22-6月 -2020 15:31:23 * (CONNECT_DATA=(SID=ora12a)(CID=(PROGRAM=DataGrip)(HOST=__jdbc__)(USER=Res0l))) * (ADDRESS=(PROTOCOL=t cp)(HOST=198.120.100.198)(PORT=2071)) * establish * ora12a * 0 2020-06-22T15:31:26.862394+08:00 如果实在找不到，可以在终端或cmd窗口输入lsnrctl status 输出的信息中会有监听的日志文件路径&#xA;或者执行全文件夹搜索&#xA;find /users/oracle/ -name listener.</description>
    </item>
    <item>
      <title>Oracle——表结构查询</title>
      <link>/cn/2020/2020-06-20-oracle-tablestructquery/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-20-oracle-tablestructquery/</guid>
      <description>Oracle获取用户下的所有表的主键 select a.OWNER as 外键拥有者, a.TABLE_NAME as 外键表, c.COLUMN_NAME as 外键列, b.OWNER as 主键拥有者, b.TABLE_NAME as 主键表, d.COLUMN_NAME as 主键列, c.CONSTRAINT_NAME as 外键列, d.CONSTRAINT_NAME as 主键名 from USER_CONSTRAINTS a, USER_CONSTRAINTS b, USER_CONS_COLUMNS c, USER_CONS_COLUMNS d where a.R_CONSTRAINT_NAME = b.CONSTRAINT_NAME and a.CONSTRAINT_TYPE = &amp;#39;R&amp;#39; and b.CONSTRAINT_TYPE = &amp;#39;P&amp;#39; and a.R_OWNER = b.OWNER and a.CONSTRAINT_NAME = c.CONSTRAINT_NAME and b.CONSTRAINT_NAME = d.CONSTRAINT_NAME and a.OWNER = c.OWNER and a.TABLE_NAME = c.TABLE_NAME and b.OWNER = d.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-13</title>
      <link>/cn/2018/2018-04-17-oracle-13/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-04-17-oracle-13/</guid>
      <description>考试信息 时间: 4/20 2:00-3:30 地点: J1-311教室 开卷: 课堂笔记+教材(D33996+D32645) 考试内容 题型 单选题 30% 多选题 30% 简答题 40% SQL语句 select where /order by/目录匹配%和_/escape 函数 substr/round/truncate/nvl/case decode(不考) 连接查询和子查询 主函数 AVG/MAX/MIN&amp;hellip; Oracle架构 D32645 P8 服务器, 连接器, instance(内存+进程), SGA, PGA等等,名称解析, 监听器 logmnr 4/10的内容 awr 备份恢复 RMAN恢复管理器 认识RMAN RMAN常用命令 report schema;---查看数据库结构 db_unique_name ------------------------------- list backup backup spfile; backup current controlfile; rman datafile 3; backup database; 日志文件不需要备份 list copy crosscheck copy; delete backup; backup archive all; -------------------------------- copy datafile 3 to &amp;#39;path&amp;#39;; restore recover list show configure RMAN整库备份 spfile, controlfile 指定spfile和controlfile的备份目的地 指定datafile的备份目的地 归档( 联机日志文件的备份 ) 备份归档日志(plus archivelog) 执行备份 插入数据进入cold表 复制日志文件 摧毁数据库 恢复数据库 #文件夹中建立一个目录 list backup; delete backup; show all;##查看配置 #CONFIGURE CONTROLFILE AUTOBACKUP OFF; #CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE DISK TO &amp;#39;%F&amp;#39;; configure channel device type disk format &amp;#39;D:\salesback\%d_%u_%T&amp;#39;; sql&amp;gt;alter system archive log current; sql&amp;gt;select * from scott.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-11</title>
      <link>/cn/2018/2018-04-08-oracle-11/</link>
      <pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-04-08-oracle-11/</guid>
      <description>审核 强制审核 标准数据库审核 基于值的审核 细粒度审核(FGA) desc dbms_fga;---STATEMENT_TYPES审核语句类型 execute dbms_fga.add_policy(&amp;#39;SCOTT&amp;#39;,&amp;#39;EMP&amp;#39;,&amp;#39;FGA_DEMO&amp;#39;,STATEMENT_TYPES=&amp;gt;&amp;#39;SELECT,INSERT,DELETE&amp;#39;); ---执行select,insert,delete操作 desc dba_fga_audit_trail alter session set nls_date_format=&amp;#39;yyyy-mm-dd hh24:mi:ss&amp;#39;; ---中间进行scott用户下的select,insert和delete操作 select TIMESTAMP,DB_USER,SQL_TEXT from dba_fga_audit_trail 审核DBA show parameter audit 触发器(头部,触发条件,被触发代码) DML触发器&#xA;添加for each row进行逐行操作显示&#xA;添加referencing old as o new as n for each row when(n.sal&amp;gt;5000)进行条件&#xA;create table demo1(a varchar(20)); create or replace trigger scott.tr1 after update on scott.emp for each row begin insert into scott.demo1 values(&amp;#39;changed!&amp;#39;); end; update emp set sal=2000 where empno=7369; select * from demo1; create or replace trigger scott.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-12</title>
      <link>/cn/2018/2018-04-10-oracle-12/</link>
      <pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-04-10-oracle-12/</guid>
      <description>数据库备份和恢复 需要数据库备份恢复的情况 PDF D17090&#xA;logmnr的使用&#xA;启动数据库补充日志 desc v$database 🆗 select supplementallog from v$database ---不太确定supplementallog alter database add supplemental log data;🆗 产生数据字典文件 设置数据字典文件的目的地(初始化参数) 产生数据字典文件 产生一个事务 添加需要分析的日志文件 启动分析 查询内容 ---老师教程 ---自己跑一遍🆗 ---设置一下目录,得先在文件系统中创建好文件夹 show parameter utl_file_dir 🆗 ---重启生效shutdown immediate&amp;amp;startup , path1为之前在文件系统中创建好的文件夹路径 🆗 alter system set utl_file_dir =&amp;#39;path1&amp;#39; scope=spfile;🆗 ---再show一遍是没有的,重启才生效 execute dbms_logmnr_d.build(dictionary_filename=&amp;gt;&amp;#39;名字.ora&amp;#39;,dictionary_location=&amp;gt;&amp;#39;path&amp;#39;)🆗 ---产生数据文件 提交事务 select empno,ename,sal from emp;🆗 update emp set sal=5000 where empno=7934;🆗 commit;🆗 execute dbms_logmnr.add_logfile(LogFileName=&amp;gt;&amp;#39;path2&amp;#39;,Options=&amp;gt;dbms_logmnr.new)🆗 ---如果是追加为.addfile select group\#,status from v$log;🆗 ---查询当前组 current select group\#,member from v$logfile;🆗 ---对应current编号的path2=&amp;gt;E:\APP\RES0LIYA\ORADATA\ORCL\REDO02.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-10</title>
      <link>/cn/2018/2018-04-03-oracle-10/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-04-03-oracle-10/</guid>
      <description>Oracle安全 1、验证 用户 sys 1、操作系统验证&#xA;2、口令文件验证&#xA;show parameter remote_login_passwordfile 1、None&#xA;2、Exclusive（单例程，多用户）&#xA;3、Shared（多例程，单用户）&#xA;修改口令文件 &amp;lt;-cmd管理员-&amp;gt; orapwd file=D:\Oracle\product\11.2.0\dbhome_1\database\PWDdyi.ora password=admin entries=1 force=y #除系统外最多允许四个用户 禁用操作系统验证 D:\Oracle\product\11.2.0\dbhome_1\NETWORK\ADMIN\sqlnet.ora 中&#xA;SQLNET.AUTHENTICATION_SERVICES= (NTS) NTS改为NONE&#xA;desc v$pwfile_users; grant sysdba to a1 identified by a1 #授权 ... select username,sysdba from v$pwfile_users; revoke sysdba from scott , a1... #撤销 nosys 1、数据库验证&#xA;create user u1 identified by u1; conn u1/u1#报错无权限 grant creat session to u1;#给权限 2、操作系统验证&#xA;编辑注册表 找到Oracle 增加OSAUTH_PREFIX_DOMAIN字串,值为false&#xA;建立新的windows用户hehe&#xA;在Oracle中建立用户&#xA;show parameter os #查信息 alter system set os_authent_prefix=&amp;#39;&amp;#39; scope=spfile; #将value OPS$去掉，改完shutdown重新启动使修改生效 create user hehe identified externally #若没执行上步，需使用OPS$hehe grant connect to hehe #赋权限 以windows用户登入 runas /user:hehe cmd sqlplus/ 或 conn/ 连接数据库 遗留问题，之前改的NONE要改回NTS 2、授权 系统权限 对象权限 权限传递的原则 系统权限不连带 对象权限是连带的 角色：权限的集合（需要激活） 自定义角色 预定义角色 应用程序角色（靠应用程序激活的角色） 3、审核 强制审核（默认审核）：重大数据库事件&amp;mdash;&amp;mdash;&amp;mdash;-警告日志文件 D:\Oracle\diag\rdbms\orcl\orcl\trace 标准数据库审核 启用审核 &amp;mdash;&amp;mdash;-修改初始化参数 show parameter audit alter system set audit_trail=bzd scope=spfile; #报错会告诉你能用什么 select count(*) from aud$ truncate table aud$; desc dba_audit_trail; #查用户在什么时间做了什么 指定审核选项</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-9</title>
      <link>/cn/2018/2018-03-30-oracle-9/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-30-oracle-9/</guid>
      <description>管理表空间和数据文件 数据库的存储层次结构 PPT153 数据库, 表空间, 段(存储结构) 区(最小的空间分配单位)___空间管理 数据字典管理[占用系统表空间,增加系统负担,现已被废弃] 本地管理 bitmap位图 extend_id bitmap 1 1 2 0 //可用 块(最小的IO单位) 根据访问数据量来控制块的单位大小 碎片,本地管理 依据管理和性能分配表空间 索引和数据不要放在一个表空间里 空间管理 系统空间 非系统空间 创建表空间 desc dba_segments show parameter db_block_size create tablespace tbs1 datafile &amp;#39;D:\app\hwj\oradata\sales\tbs1.dbf&amp;#39; size 10m blocksize 2048;---报错 alter session set nls_language=america;---解决报错为?????的办法 show parameter cache; alter system set db_2k_cache_size= 10m; create tablespace userdata datafile &amp;#39;E:\app\Res0liya\oradata\orcl\userdata01.dbf&amp;#39; size 100m autoextend on next 5m maxsize 200m;---创建表空间 create tablespace userdata datafile &amp;#39;E:\app\Res0liya\oradata\orcl\userdata01.dbf&amp;#39; size 100m extend management dictionary;---创建表空间 desc dba_tablespaces;---如果你的system表空间是本地管理local的,那你只能创建本地管理表空间,如果是dictionary的那么两者都可以创建 表空间的类型 常规表空间 select name from v$tablespace; 临时表空间(排序) 数据库属性视图 desc database_properties; select property_name,property_value from database_properties;---default_temp_tablespace临时表空间,default_permament_tablespace默认常规表空间 create tablespace users datafile &amp;#39;E:\app\Res0liya\oradata\orcl\users01.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-8</title>
      <link>/cn/2018/2018-03-27-oracle-8/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-27-oracle-8/</guid>
      <description>管理控制文件 控制文件的作用❓ 控制文件的内容❓二进制 oradebug dump controlf 3 oradebug setmypid oradebug tracefile_name&#xA;alter session set nls_language=american&#xA;控制文件的复用🆗 内容一模一样，做多个同样的控制文件放在不同的地方 见ppt 126/383 alter system set control_files = &amp;#39;path1&amp;#39;,&amp;#39;path2&amp;#39;,&amp;#39;path3&amp;#39; scope=spfile; shutdown cp &amp;#39;path1&amp;#39;/&amp;#39;path2&amp;#39; &amp;#39;path3&amp;#39;; startup show parameter control_files; 创建控制文件 alter database backup controlfile to trace as &amp;#39;e:\trace_controlf.txt&amp;#39; alter database mount 删除控制文件之后启动报错再启动一下脚本 语句在trace_controlf.txt里边跑一下 实验：&#xA;查看控制文件的名称和内容🆗 select name &amp;hellip; show parameter control_files; oradebug &amp;hellip;见上 控制文件的复用🆗 创建控制文件 不是很清楚，再看大佬演示一下跑一下脚本&#xA;管理日志文件 日志文件的作用&#xA;日志工作体系&#xA;日志管理&#xA;务必搞清楚一下switch和checkpoint两条命令 😋&#xA;查询日志文件组，日志文件成员，归档日志🆗 desc一下就知道了v$log v$logfile v$archived_log 添加日志文件组🆗 alter database add logfile group 4; 向日志文件组添加成员🆗 alter database add logfile member &amp;#39;path&amp;#39; to group 4; 删除日志文件成员🆗 alter database drop logfile member &amp;#39;path&amp;#39; to group 4; select group#，status from v$log; 删除日志文件组🆗 日志组删除时日志文件还在不在： 如果是OMF日志文件则不在，默认情况下是在的 alter database drop logfile group 4; 清除日志文件🆗 alter database clear logfile &amp;#39;path&amp;#39;; OMF 没听 创建一个路径放入日志文件，OMF形式 设置归档模式 ---要在 mount模式下 startup mount alter database archivelog; archive log list; alter database noarchivelog; 设置归档目的地 手动归档 show parameter log_archive alter system set log_archive_dest_1=&amp;#39;location=path1&amp;#39; alter system archieve log current 移动或者重命名日志文件 select group#, from v$logfile shutdown immediate之后剪切（从原路径）一个log文件到别的目录（现在路径） startup mount不报错，不检测日志文件 alter database open报错，看报错信息，找E:\app\Res0liya\diag\rdbms\orcl\orcl\trace目录下的alert_orcl.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-7</title>
      <link>/cn/2018/2018-03-23-oracle-7/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-23-oracle-7/</guid>
      <description>手工创建数据库（sales） 没操作起来，得等大佬带着操作一下&#xA;注意要用cmd别用windows powershell&#xA;创建windows服务（instance） &amp;ndash;oradim oradim -new -sid sales 将sales设为当前例程， set oracle_sid = sales 创建/编辑初始化参数文件 pfile&#xA;连接数据库 sqlplus————sys as sysdba——————123456 create pfile from spfile; 根据初始化参数创建相应的目录结构&#xA;在admin和flash_recovery_area和oradata中创建sales文件夹， 对应的INITorcl.ora改成INITsales.ora并且改变其中的内容 创建口令文件 这个密码用于set Oracle_sid之后，登陆sysdba的密码 orapwd file=E:\app\Res0liya\product\11.2.0\dbhome_1\database\PWDsales.ora password=123 entries=2 执行创建数据库的语句&#xA;启动例程以及验证数据库 startup nomount showdown immediate show parameter db_name 三个文件必须要，数据文件和日志文件system,sysaux,undo 创建数据字典视图&#xA;创建Oracle内部包&#xA;创建spfile&#xA;创建scott方案&#xA;加载产品用户概要文件信息&#xA;配置监听器（服务器端）和服务名（客户端）&#xA;配置DBConsole（EM，OEM）&#xA;配置用户 create database sales datafile ---数据文件 &amp;#39;D:\app\hwj\oradata\sales\system01.dbf&amp;#39; size 350m sysaux datafile &amp;#39;D:\app\hwj\oradata\sales\sysaux01.dbf&amp;#39; size 350m undo tablespace undotbs1 datafile &amp;#39;D:\app\hwj\oradata\sales\undo01.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-6</title>
      <link>/cn/2018/2018-03-20-oracle-6/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-20-oracle-6/</guid>
      <description>回顾 删除操作delete和drop的区别 回收站的机制 删除表的时候其实不删除文件而是改动文件名，实现加入回收站的操作&#xA;flashback ***** 数据完整性 代码 触发器 约束（开销小） 数据+规则&amp;mdash;&amp;ndash;&amp;gt;合理，有效 建立表的时候:关键字+起名字+约束类型（+字段）;&#xA;一些关键字: CHECK 检查条件 FOREIGN KEY, REFERENCES ON DELETE CASECADE, 删除部门，员工回家 ON DELETE SET NULL, 删除部门，员工待分配&#xA;添加约束和删除约束: ALTER ADD/DROP/ENABLE/DISABLE&#xA;---一点例子 ALTER TABLE table ADD [CONSTRAINT constraint] type (column) ; ALTER TABLE employee s ADD CONSTRAINT emp_manager_f k FOREIGN KEY (manager_id) REFERENCES employees (empoyee_id) ; ALTER TABLE employees DROP CONSTRAINT emp_manager_fk; desc user_constraints; desc user_cons_columns; ---添加约束的时候注意处理异常数据的操作 desc exceptions;异常表不存在 @?/rdbms/admin/utlexcpt 创建异常表---&amp;gt;查询启用约束后违反约束的数据 alter table test enable constraints uni_c2 exceptions into exceptions---启用约束时候注意把异常放入exceptions表中 select rowid,c1,c2 2 from test 3 where rowid in (select row_id from exceptions);---查询异常数据然后修改 truncate table exceptions; --- 视图 没认真听</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-5</title>
      <link>/cn/2018/2018-03-16-oracle-5/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-16-oracle-5/</guid>
      <description>锁 lock 自动，手动，力度权限 共享锁，独占锁 行锁，表锁 死锁 deadlock Oracle能自动查到产生死锁的语句，并且回滚掉这句 两个事物冲突，然后产生死锁，使用v$lock和v$session来解决死锁&#xA;http://www.cnblogs.com/rootq/articles/1147450.html&#xA;SQL PLUS命令 help index&#xA;SQL 讲完了 QL(select)&#xA;DML(insert,update,delete,merge)&#xA;DCL(grant,invoke)&#xA;TCL(commit,rollback,savepoint)&#xA;DDL(create,alter,drop,truncate,rename,comment)&#xA;序列，索引&#xA;建表table原则 (PPT313)&#xA;名称空间，表的名称不能和同名称空间下的对象同名&#xA;同义词&#xA;创建用户和给予权限（grant）&#xA;pserdocolumn 伪列（不在列编制里边的列，desc不可见）&#xA;rowid 物理地址，BASE64_CODE文件号，列号，行号&#xA;主流编制 dbms_rowid select dbms_rowid.ROWID_RELATIVE_FNO(rowid) File#, dbms_rowid.ROWID_BLOCK_NUMBER(rowid) Block#, dbms_rowid.ROWID_ROW_NUMBER(rowid) Row#, frmo emp; 一些语句 view_name from user_views 名称空间desc user_objects col object_name for a30; create user cr identified aaa grant给予用户基本权限 desc dba_users,查询用户默认表空间，存储权限没有，能建表但是在使用的时候才需要 alter user zhang quota 5m/unlimited on users; grant create any table to zhang; grant select on scott.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-4</title>
      <link>/cn/2018/2018-03-13-oracle-4/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-13-oracle-4/</guid>
      <description>PL/SQL QL(select) 循环 (sql中用斜杠/执行命令)&#xA;绝对循环 while循环 for循环 begin for i in 1..10 loop insert into t1 values(i); end loop; commit; end;（功能结束就加分号，块结束） 块结构 声明部分（可选） 可执行部分（必须） 异常处理部分（可选） 匿名块：4个部分 declare begin exception end 命名块： create or replace procedure p1 as begin for i in 1..10 loop insert into t1 values(i); end loop; commit; end; select a.id,b.id from t1 a,t1 b where a.id+5=b.id; 或者where a.id+(select count(*) from t1)/2=b.id; where a.id+round((select count(*) from t1)/2)=b.id; //round 四舍五入 不显示12的话，用外部语句 where a.</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-2</title>
      <link>/cn/2018/2018-03-02-oracle-2/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-02-oracle-2/</guid>
      <description>用户 sys（用户）&#xA;sysdba（权限）&#xA;sysoper（权限）&#xA;空闲例程是已经关的，要先startup&#xA;shutdown immediate 立即关闭例程&#xA;oracle内 代码+数据（系统/用户数据）&#xA;日志 log 日志 作用：恢复 redo log 重做日志 数据文件+日志文件&#xA;记录事务 ACID&#xA;A 原子性 C 一致性 I 隔离性（锁lock（锁外存）/闩latch（锁内存）） D 持久性/永久性 restore 还原 对应backup recover 恢复 （数据文件+日志文件）&#xA;create tablespace ts datafile &amp;#39;&amp;#39; create table scott.t(id int) insert... commit.. alter tablespace ts offline alter database create datafile 7 online recover 进程结构 服务器进程（专用服务器进程 客户连接数&amp;lt;200/共享服务器进程）&#xA;用户进程/后台进程（1-3那张图的PMON SMON DBWR LGWR CKPT Others）&#xA;名称解析&#xA;服务名：conn scott/tiger@db11 可以设置网络 $hostname</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-3</title>
      <link>/cn/2018/2018-03-06-oracle-3/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-03-06-oracle-3/</guid>
      <description>demo.sql 调用的时候不用写sql其他的要写@d:/demo&#xA;select d from scott.dept;&#xA;help index edit run&#xA;null 不参与统计 三值&#xA;层次查询&#xA;lock 共享锁 独享锁&#xA;死锁 解决死锁 ：sysdba kill session ：desc v$lock;&#xA;修改表 表名 : 增加字段 :alter table t_name add c_name type(size); 字段类型 :alter table t_name modify c_name &amp;ndash;; 字段宽度 :alter table t_name modify c_name type(size);&#xA;代理用户&#xA;delete DML 删之前，放至回滚段，效率较低，可回滚，不释放存储空间&#xA;truncate DDL 效率高，不可回滚释放存储空间&#xA;HWM high water mark</description>
    </item>
    <item>
      <title>Oracle实践数据库笔记-1</title>
      <link>/cn/2018/2018-02-27-oracle-1/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      <guid>/cn/2018/2018-02-27-oracle-1/</guid>
      <description>oracle服务器 1.instance&#xA;SGA（system global area 系统） PGA（程序用的 局部） 2.database（文件的集合）&#xA;table 表 全称 heap table 堆表 代码 数据（系统数据+用户数据） 共享池shared pool 库缓存 放代码 数据字典缓存 数据字典 dictionary sys@db&amp;gt;desc dictionary select table_name from dict where table_name like &amp;#39;%SGA%&amp;#39; 1.数据字典视图（数据文件 不改就不变）&#xA;USER_ 当前用户是所有者 属于他自己的对象 ALL_ 当前用户有select权限 能访问 DBA_ scott@DESC user_tables select table_name from user_tables /all_tables可以看到用户的表 /能访问的表 desc user_indexes select index_name from user_indexes 2.动态性能视图（内存和控制文件）&#xA;v$ 注意了解一下 cache 提高读性能 buffer 提高写性能 推荐书籍《oracle concepts》&#xA;使用oracle 1.用户接口 界面 sqlplus</description>
    </item>
  </channel>
</rss>
