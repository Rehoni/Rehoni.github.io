<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>说明书 on Rehoni | 罗皓</title>
    <link>/tags/%E8%AF%B4%E6%98%8E%E4%B9%A6/</link>
    <description>Recent content in 说明书 on Rehoni | 罗皓</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/%E8%AF%B4%E6%98%8E%E4%B9%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基本开发守则</title>
      <link>/cn/2020/2020-06-20-techs-devrules/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-20-techs-devrules/</guid>
      <description>命名规范 目录 由于 Windows 和 OSX下对文件大小写不敏感，因此我们采用kebab-case命名法。&#xA;基础用法 例如：项目文件夹 my-project-name&#xA;复数 项目内的子文件夹按照作用，采用常规单词命名。不使用缩写，除非已经约定俗成的惯用法。&#xA;例如：脚本文件 scripts、模块modules、 组件components&#xA;文件 和目录一致，采用kebab-case&#xA;变量 采用camelCase，且使用英文名词&#xA;✔️ 正确示例：userCount 、listItems&#xA;❌ 错误用法：setCount set 是动词&#xA;常量 采用UPPER_CASE，即全部使用大写字母，多音节用 _ 分割例如：MAX_COUNT、URI&#xA;函数 采用camelCase，前缀为动词&#xA;动词 含义 返回值 can 判断是否可执行某个动作(权限) 函数返回一个布尔值。true:可执行;false:不可执行 has 判断是否含有某个值 函数返回一个布尔值。true:含有此值;false:不含有此值 is 判断是否为某个值 函数返回一个布尔值。true:为某个值;false:不为某个值 get 获取某个值 函数返回一个非布尔值 set 设置某个值 无返回值、返回是否设置成功或者返回链式对象 load 加载某些数据 无返回值或者返回是否加载完成的结果 例如：getName 建议的动词约定&#xA;类**&amp;amp;**构造函数 采用PascalCase&#xA;类的成员包含 2 部分&#xA;公共属性和方法：跟变量和函数的命名一样。 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。 URL及路由 大小写不敏感，因此采用kebab-case&#xA;例如：mobile/design-tools&#xA;编码风格及样式规范 文件编码: 使用utf-8&#xA;缩进符: 使用空格代替 Tab</description>
    </item>
    <item>
      <title>数据库设计守则</title>
      <link>/cn/2020/2020-06-20-techs-dbrules/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-20-techs-dbrules/</guid>
      <description>数据库命名规则 表名与字段的命名统一采用大写英文全称或简称，严禁用拼音或缩写； 数据库的所有表名、视图名、字段名、存储过程一律采用大写； 名称中间词的间隔采用下划线“_”拼接。 表名命名规定 表名命名统一采用大写英文全称或简称，严禁用拼音或缩写； 数据库的所有表明、视图名、字段名、存储过程一律采用大写； 名词中间词的间隔采用下划线“_”拼接； 表名不可以太长，最好不要超过3个英文单词长度（30个字母）； 在表创建完成前，应该为表添加表的注释。 表设计规范 所有字段在设计时，除以下数据类型timestamp、image、datetime、smalldatetime、uniqueidentifier、binary、sql_variant、binary、varbinary外，最好有默认值； 字符型的默认值为一个空字符值串‘’； 数值型的默认值为数值0； 逻辑型的默认值为数值0（其中：系统中所有逻辑型中数值0表示为“假”，数值1表示为“真”）； datetime、smalldatetime类型的字段没有默认值，必须为NULL； 当字段定义为字符串型时，建议使用varchar2（varchar和varchar2的区别）而不是用nvarchar； 字段的描述： 字段必须填写描述信息（注释） 尽量遵守第三范式的标准（3NF） 表内的每一个值都只能被表达一次（列名不重复） 表内的每一行都应当被唯一的标示（标识唯一性，如自动增长主键） 表内不应该存储依赖于其他键的非键信息 字段名命名约定 数据库字段应该是有意义且易于理解的，最好是能够表达字段含义的英文字母； 系统中所有属于内码，即仅用于标识唯一性和程序内部用到的标识性字段，字段名称建议取为ID，采用类型为整型或长整型，也可以使用字符类型； 系统中属于是业务内的编号字段，代表一定业务信息，建议字段命名为CODE，如线路编号LINE_CODE； 不要在数据库表字段（列名）中包含数据类型，如：datetime； 不要在数据库表字段（列名）命名时重复表名，可以使用表名首字母（不包含数据库表名前缀）。 注意：&#xA;​&#x9;在数据库表字段（列名）命名时不建议使用数据库关键字，如：name，time，datetime，password等。&#xA;存储过程命名规定 存储过程的命名请遵循以下命名规范：PRO_+系统模块（与表前缀类似）+_+功能标识英文单词或英文单词缩写。&#xA;如果一个存储过程只对一个表进行操作，建议存储过程的名称就用存储过程的表的表名（不带前缀）。这样有利于根据表名找到相应的存储过程。例如，用于清洗缺陷信息的过程PRO_DEFECT_CLEANING。&#xA;存储过程设计规范 在存储过程中必须说明一下内容： 目的：说明此存储过程的作用。 作者：首次创建此存储过程的人的姓名。在此请使用中文全名，不允许使用英文简称。 创建日期：创建存储过程的日期。 修改记录：修改记录需包含修改顺序号、修改者、修改日期、修改原因，修改时不能直接在原来的代码上修改，也不能删除原来的代码，只能先将原来的代码注释掉，再重新增加正确的代码。修改顺序号的形式为：log1，log2，log3。。。根据修改次数顺序增加，同时在注释掉的原来的代码块和新增的正确代码块前后注明修改顺序号。 对存储过程各参数及变量加中文注解。 建议在数据库中创建一个文本文件保存创建脚本。 触发器命名规范 Insert触发器加&amp;rsquo;_i&amp;rsquo;，Delete触发器加&amp;rsquo;_d&#39;，Update触发器加&amp;rsquo;_u&amp;rsquo;。&#xA;触发器设计规范 在触发器中必须说明以下内容：&#xA;目的：说明此触发器的作用。 创建者：首次创建此触发器的人的姓名。在此请使用中文全名，不允许使用英文简称。 修改者、修改日期、修改原因：如果有人对此触发器进行了修改，则必须在此触发器的前面加注修改者姓名、修改日期及修改原因。 对触发器各参数及变量加中文注解。 建议在数据库中创建一个文本文件保存创建脚本。 </description>
    </item>
    <item>
      <title>简单python轮廓</title>
      <link>/cn/2020/2020-06-20-python-essential/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/cn/2020/2020-06-20-python-essential/</guid>
      <description>一些特性 解释型语言： 制表符和四个空格，代码末尾解释器自动加分号&#xA;i = &amp;#39;hello&amp;#39; print(type(i)) print(isinstance(i,str)) print(id(i)) # 查看内存地址 dir(i) # 查看支持的操作 list与tuple： ​&#x9;区别就是tuple是不可变的，除非tuple里边存放了list&#xA;​&#x9;list支持的操作：dir(list)，append，insert，pop&#xA;input()接收输入字符&#xA;elif为else if，为关键字&#xA;字典： Set集合： 唯一性，set可以用于文件去重&#xA;定义函数： def func() 可以return或者不return、函数可递归&#xA;切片slice： list[0:3] ，list[-2:]，支持步径操作，arr[::5]，arr[::10:2]&#xA;enumerate()取到下标和值 列表生成器： 数字、字符串以及字典均可生成列表&#xA;b = [x*x for x in range(1,11)] print(b) c = [x*x for x in range(1,11) if x%2 ==0] print(c) 生成器、异常捕获 模块化 pip install request python中的类 继承object类，私有函数名的声明，类的继承，空成员函数放入pass&#xA;错误与异常类 try，exception&#xA;调试 常用调试pdb，详细用法https://zhuanlan.zhihu.com/p/37294138&#xA;文件读写 建议使用with open as f，（w写入，r读出）的方式，flush()，close()</description>
    </item>
  </channel>
</rss>
