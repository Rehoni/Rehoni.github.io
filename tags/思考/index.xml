<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>思考 on Rehoni | 罗皓</title>
    <link>//localhost:1313/tags/%E6%80%9D%E8%80%83/</link>
    <description>Recent content in 思考 on Rehoni | 罗皓</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/%E6%80%9D%E8%80%83/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为什么ppt不如备忘录</title>
      <link>//localhost:1313/cn/2024/0213%E4%B8%BA%E4%BB%80%E4%B9%88ppt%E4%B8%8D%E5%A6%82%E5%A4%87%E5%BF%98%E5%BD%95/</link>
      <pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/cn/2024/0213%E4%B8%BA%E4%BB%80%E4%B9%88ppt%E4%B8%8D%E5%A6%82%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
      <description>摘录自阮一峰科技爱好者周刊 主持人问贝佐斯：&amp;ldquo;我听说亚马逊开会时，不准使用 PPT，发言人必须提交一份六页的备忘录。这是真的吗？&amp;rdquo;&#xA;这个事情一直是传闻，但这一次，贝佐斯亲口承认确实如此。&amp;ldquo;新来的人可能会大吃一惊，我们的开会方式与众不同。&amp;rdquo;&#xA;&amp;ldquo;会议的前30分钟，我们是不说话的。大家在会议室中安静地坐在一起，阅读这份六页的备忘录，在空白处做笔记，过了30分钟才开始讨论。&amp;rdquo;&#xA;这真的很奇怪，你见过半个小时没人说话的会议吗？&#xA;贝佐斯解释：&amp;ldquo;你可以说，更好的做法是，大家都提前阅读这些备忘录。但问题是，人们没有时间这样做，他们参加会议只是因为必须出席。&amp;rdquo;&#xA;&amp;ldquo;我们索性在会议上留出时间，让大家现场阅读材料，然后就可以进行真正高层次的讨论了，所有人都跟得上讨论的主题，不会搞不清一些基本的事实。&amp;rdquo;&#xA;那么，为什么一定要当事人提交六页的备忘录，而不是现场主讲 PPT 呢？&#xA;贝佐斯说，书面的备忘录要比 PPT 演示，效果好得多，主要有以下几点原因。&#xA;（1）PPT 的设计目的是说服，这是一种销售工具。但是在公司内部，你想要的是真相，而不是业务主管的推销。&#xA;（2）PPT 的缺点是，它对作者相对容易，对观众来说却很难抓住要点。备忘录正好相反，写好一份六页的备忘录，对于作者是很难的。&#xA;你可能需要两周的时间，先写出初稿，然后再重写，不断加工，确保你的文字是准确和可靠的。所以，备忘录对作者非常困难，但对观众就好多了，半小时的阅读就能搞清楚事情的来龙去脉，也看得出作者对这个问题的熟悉程度。&#xA;（3）备忘录可以节省会议时间。如果是 PPT 演示，高管们会不停地打断提问，结果发现答案就在下一张幻灯片。&#xA;但是，阅读备忘录时，你必须先把所有问题写在空白处，当你读到最后一页时，发现很多问题已经得到了解答，这就节省了当众提问的时间。&#xA;（4）PPT 演示过程中，主讲人也许会根据现场情况，临时决定隐藏或修改一些讲法。备忘录就没有这个问题，主讲人必须事先给出完整描述，你更能了解他的真实想法。&#xA;（5）PPT 通常只是一些要点，不是完整的句子，有利于隐藏很多草率的想法。而备忘录是完整的段落，必须有主题句，有动词和名词，你很难隐藏自己的草率思维。&#xA;备忘录迫使作者处于最佳状态，你能得到一个人真正最好的想法。如果 PPT 演示，你们可能要讨论很久，发言人才能进入最佳状态。从长远来看，备忘录节省了你的时间。&#xA;以上就是贝佐斯不允许使用 PPT 的五点理由。&#xA;我觉得这些理由很有说服力。PPT 在国内已经泛滥成灾，大家好像默认，它是开会的标准方式，缺了还不行。这真的要改一下，学习亚马逊的&amp;quot;备忘录开会法&amp;quot;&amp;mdash;-先写成文档，再进行讨论&amp;mdash;-可能是更好更正确的做法。</description>
    </item>
    <item>
      <title>编码随想</title>
      <link>//localhost:1313/cn/2024/0206%E7%BC%96%E7%A0%81%E9%9A%8F%E6%83%B3/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/cn/2024/0206%E7%BC%96%E7%A0%81%E9%9A%8F%E6%83%B3/</guid>
      <description>不要过度开发，过度设计，做好现阶段的事情就行&#xA;不要拘泥于代码层层面的优雅和艺术，代码只是工具，是用来解决问题的&#xA;技术栈越少越好，越多越累积技术债务，花费更多精力和时间&#xA;不要重复造轮子&#xA;最好的解决方案往往是最简单朴素的那个&#xA;年终总结应该以更新自己的简历为里程碑，是过去一年你自己的收获和成长，要看公司为你做了什么&#xA;不要固化自己的技术栈&#xA;蛙化现象 作为一个在国内干活也在国外干过并且现在蹲在system领域的程序员，我觉得国内这个情况其实就是因为技术上升路径几乎不存在，往高都是转管理了。欧美的公司/学校愿意养程序员一辈子给程序员提供上升路径是因为看到了他们的专业程度所创造的价值，我真的见过非常多写一辈子代码做一辈子技术水平很高硕果累累并且发自内心喜欢计算机不做管理的美国老头老太太。 国内顶尖计算机从业人员水平其实跟国外差别不大，但高水平占的比例低并且最老一批的整体年纪也远还没到欧美老头老太太这样。于是国内企业看不到多年深耕技术的程序员的价值，也就不会提供上升路径。上升路径不存在反向作用于更少有人终生学习终生做技术和发自内心热爱技术，要是真的做技术可以上升我也不会折腾出国搞计算机了&#xA;绝大部分人学习是因为靠学习获得的收益高于学习产生的成本，当学习不能带来更多收益时人就会趋向于不学习，不改变。假如公司老板敢跟员工签订协议说任何一个员工的工资跟他所掌握的技术高度成正比，那么很快公司就会有一大批专家。而事实上，许多老板，特别是国内的老板，可能是改开时间短自己当老板时间不长仍有暴发户心态的原因，当自己想要多赚钱时就不断给员工灌鸡汤说要走出舒适区要多学习，可是当员工因为学习产生了更多价值找老板加薪时老板却推三阻四说公司效益不好要员工体谅老板的难处，像这样的情况员工当然就不再主动学了。员工也是人员工并不傻，当你要员工有狼性时先想想自己舍不舍得给肉，要是不给肉又要员工发挥狼性，那最后员工就会积极的消极怠工——因为老板就是他们的肉了。​</description>
    </item>
    <item>
      <title>简历和面试</title>
      <link>//localhost:1313/cn/2023/%E7%AE%80%E5%8E%86%E5%92%8C%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/cn/2023/%E7%AE%80%E5%8E%86%E5%92%8C%E9%9D%A2%E8%AF%95/</guid>
      <description>思考 十一十二月面试了不少人，从三四年经验到十来年经验的都有，面试下来有这些感受：&#xA;简历上的技术点不求多，只求精 写博客的真的很少，能写的说明有技术好奇心，技术不会很差 频繁跳槽又没中大厂经验的，基础都不太扎实 很多人的问题是项目经历太简单（都是界面操作），没有做过更复杂的事 工作越久越要思考一个问题：我比刚毕业的有什么优势 面试是一个双方不断了解的过程。在一个小时左右的面试中，面试官需要判断一个人究竟是否满足岗位要求、在当前团队的位置、引入团队后会让团队更好还是更差。而面试者需要尽可能地多提供信息，让对方有更多判断依据。&#xA;在拿到一个简历后，我会先看工作年限，从而唤起对应的期待值；然后看工作经历，如果有知名公司/产品的经历会加分不少；然后看项目经历里提到什么技术和复杂点；最后看专业技能里提到的知识点；工作不久的再看看学历。&#xA;好的简历该是怎样的？在我看来，好的简历可以让别人知道你究竟做过什么。看着好像很简单，但很多简历其实都没达到这个要求，能写清楚在各个公司的项目里担任过什么角色、用了什么技术、解决了什么问题、有什么思考，就很好了。有的简历里不写自己的事，光介绍项目功能介绍半页纸，让人看着着急；还有的简历里有很多牛逼哄哄的数字但和技术没什么关系，比如“XXX 项目提升日活 XX 万”，一问怎么做到的，回答“产品设计的好”😓。这种我建议干脆就别写了。&#xA;面试时，即使已经看过简历，我还是会先让面试者先自我介绍一下，通过这段介绍看看他的表达，也看看有没有说到简历以外的东西。&#xA;好的自我介绍该是怎样的？在我看来，好的介绍应该说清楚自己处理过的复杂问题，激起面试官的好奇心。比如说清楚在某段工作经历里花了很久解决的问题，这个问题为什么这么难。有的人自我介绍就是读一遍简历，为什么不抓住机会多展现下自己呢？还有的人说着说着就进入了细节，不打断的话可能要说十几分钟。&#xA;剩下的就是聊项目经历和技术点。一般项目经历比较复杂的会有很多话题可以展开，这种的就不会问八股文。但有时候项目经历过于简单，只能问一些基本问题看看你基础如何。以前面试我很害怕对方问我“你最擅长的是什么”，现在明白了，问这个问题说明你的简历和自我介绍里没说出什么复杂点，面试官是为了挖掘你的优势才这样问。&#xA;一名七年老安卓的 2022 总结</description>
    </item>
  </channel>
</rss>
